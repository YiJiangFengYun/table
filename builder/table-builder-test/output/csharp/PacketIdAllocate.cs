// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet_id_allocate.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Table {

  /// <summary>Holder for reflection information generated from packet_id_allocate.proto</summary>
  public static partial class PacketIdAllocateReflection {

    #region Descriptor
    /// <summary>File descriptor for packet_id_allocate.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PacketIdAllocateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhwYWNrZXRfaWRfYWxsb2NhdGUucHJvdG8SBXRhYmxlGgt0YWJsZS5wcm90",
            "byJ/ChJQYWNrZXRfaWRfYWxsb2NhdGUSGwoFdGFibGUYASABKAsyDC50YWJs",
            "ZS5UYWJsZRIeCgdjb2x1bW5zGAIgAygLMg0udGFibGUuQ29sdW1uEiwKBWl0",
            "ZW1zGAMgAygLMh0udGFibGUuUGFja2V0X2lkX2FsbG9jYXRlSXRlbSJhChZQ",
            "YWNrZXRfaWRfYWxsb2NhdGVJdGVtEgoKAmlkGAEgASgFEgwKBG5hbWUYAiAB",
            "KAkSEwoLZGVzY3JpcHRpb24YAyABKAkSGAoQcGFja2V0X3N0cnVjdGlvbhgE",
            "IAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Table.TableReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Table.Packet_id_allocate), global::Table.Packet_id_allocate.Parser, new[]{ "Table", "Columns", "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Table.Packet_id_allocateItem), global::Table.Packet_id_allocateItem.Parser, new[]{ "Id", "Name", "Description", "PacketStruction" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Packet_id_allocate : pb::IMessage<Packet_id_allocate> {
    private static readonly pb::MessageParser<Packet_id_allocate> _parser = new pb::MessageParser<Packet_id_allocate>(() => new Packet_id_allocate());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Packet_id_allocate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Table.PacketIdAllocateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet_id_allocate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet_id_allocate(Packet_id_allocate other) : this() {
      Table = other.table_ != null ? other.Table.Clone() : null;
      columns_ = other.columns_.Clone();
      items_ = other.items_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet_id_allocate Clone() {
      return new Packet_id_allocate(this);
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 1;
    private global::Table.Table table_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Table.Table Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Table.Column> _repeated_columns_codec
        = pb::FieldCodec.ForMessage(18, global::Table.Column.Parser);
    private readonly pbc::RepeatedField<global::Table.Column> columns_ = new pbc::RepeatedField<global::Table.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Table.Column> Columns {
      get { return columns_; }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Table.Packet_id_allocateItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(26, global::Table.Packet_id_allocateItem.Parser);
    private readonly pbc::RepeatedField<global::Table.Packet_id_allocateItem> items_ = new pbc::RepeatedField<global::Table.Packet_id_allocateItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Table.Packet_id_allocateItem> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Packet_id_allocate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Packet_id_allocate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Table, other.Table)) return false;
      if(!columns_.Equals(other.columns_)) return false;
      if(!items_.Equals(other.items_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (table_ != null) hash ^= Table.GetHashCode();
      hash ^= columns_.GetHashCode();
      hash ^= items_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (table_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      columns_.WriteTo(output, _repeated_columns_codec);
      items_.WriteTo(output, _repeated_items_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      size += columns_.CalculateSize(_repeated_columns_codec);
      size += items_.CalculateSize(_repeated_items_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Packet_id_allocate other) {
      if (other == null) {
        return;
      }
      if (other.table_ != null) {
        if (table_ == null) {
          table_ = new global::Table.Table();
        }
        Table.MergeFrom(other.Table);
      }
      columns_.Add(other.columns_);
      items_.Add(other.items_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (table_ == null) {
              table_ = new global::Table.Table();
            }
            input.ReadMessage(table_);
            break;
          }
          case 18: {
            columns_.AddEntriesFrom(input, _repeated_columns_codec);
            break;
          }
          case 26: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Packet_id_allocateItem : pb::IMessage<Packet_id_allocateItem> {
    private static readonly pb::MessageParser<Packet_id_allocateItem> _parser = new pb::MessageParser<Packet_id_allocateItem>(() => new Packet_id_allocateItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Packet_id_allocateItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Table.PacketIdAllocateReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet_id_allocateItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet_id_allocateItem(Packet_id_allocateItem other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      description_ = other.description_;
      packetStruction_ = other.packetStruction_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet_id_allocateItem Clone() {
      return new Packet_id_allocateItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "packet_struction" field.</summary>
    public const int PacketStructionFieldNumber = 4;
    private string packetStruction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PacketStruction {
      get { return packetStruction_; }
      set {
        packetStruction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Packet_id_allocateItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Packet_id_allocateItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (PacketStruction != other.PacketStruction) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (PacketStruction.Length != 0) hash ^= PacketStruction.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (PacketStruction.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PacketStruction);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (PacketStruction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PacketStruction);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Packet_id_allocateItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.PacketStruction.Length != 0) {
        PacketStruction = other.PacketStruction;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            PacketStruction = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
