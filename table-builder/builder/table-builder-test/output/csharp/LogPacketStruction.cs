// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: log_packet_struction.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Table {

  /// <summary>Holder for reflection information generated from log_packet_struction.proto</summary>
  public static partial class LogPacketStructionReflection {

    #region Descriptor
    /// <summary>File descriptor for log_packet_struction.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LogPacketStructionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chpsb2dfcGFja2V0X3N0cnVjdGlvbi5wcm90bxIFdGFibGUaC3RhYmxlLnBy",
            "b3RvIoMBChRMb2dfcGFja2V0X3N0cnVjdGlvbhIbCgV0YWJsZRgBIAEoCzIM",
            "LnRhYmxlLlRhYmxlEh4KB2NvbHVtbnMYAiADKAsyDS50YWJsZS5Db2x1bW4S",
            "LgoFaXRlbXMYAyADKAsyHy50YWJsZS5Mb2dfcGFja2V0X3N0cnVjdGlvbkl0",
            "ZW0igQEKGExvZ19wYWNrZXRfc3RydWN0aW9uSXRlbRIMCgRuYW1lGAEgASgJ",
            "EgwKBHNpemUYAiABKAUSEwoLZGVzY3JpcHRpb24YAyABKAkSGQoRa2V5X25h",
            "bWVfZm9yX2NvZGUYBCABKAkSGQoRa2V5X3R5cGVfZm9yX2NvZGUYBSABKAli",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Table.TableReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Table.Log_packet_struction), global::Table.Log_packet_struction.Parser, new[]{ "Table", "Columns", "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Table.Log_packet_structionItem), global::Table.Log_packet_structionItem.Parser, new[]{ "Name", "Size", "Description", "KeyNameForCode", "KeyTypeForCode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Log_packet_struction : pb::IMessage<Log_packet_struction> {
    private static readonly pb::MessageParser<Log_packet_struction> _parser = new pb::MessageParser<Log_packet_struction>(() => new Log_packet_struction());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Log_packet_struction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Table.LogPacketStructionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log_packet_struction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log_packet_struction(Log_packet_struction other) : this() {
      Table = other.table_ != null ? other.Table.Clone() : null;
      columns_ = other.columns_.Clone();
      items_ = other.items_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log_packet_struction Clone() {
      return new Log_packet_struction(this);
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 1;
    private global::Table.Table table_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Table.Table Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Table.Column> _repeated_columns_codec
        = pb::FieldCodec.ForMessage(18, global::Table.Column.Parser);
    private readonly pbc::RepeatedField<global::Table.Column> columns_ = new pbc::RepeatedField<global::Table.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Table.Column> Columns {
      get { return columns_; }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Table.Log_packet_structionItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(26, global::Table.Log_packet_structionItem.Parser);
    private readonly pbc::RepeatedField<global::Table.Log_packet_structionItem> items_ = new pbc::RepeatedField<global::Table.Log_packet_structionItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Table.Log_packet_structionItem> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Log_packet_struction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Log_packet_struction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Table, other.Table)) return false;
      if(!columns_.Equals(other.columns_)) return false;
      if(!items_.Equals(other.items_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (table_ != null) hash ^= Table.GetHashCode();
      hash ^= columns_.GetHashCode();
      hash ^= items_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (table_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      columns_.WriteTo(output, _repeated_columns_codec);
      items_.WriteTo(output, _repeated_items_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      size += columns_.CalculateSize(_repeated_columns_codec);
      size += items_.CalculateSize(_repeated_items_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Log_packet_struction other) {
      if (other == null) {
        return;
      }
      if (other.table_ != null) {
        if (table_ == null) {
          table_ = new global::Table.Table();
        }
        Table.MergeFrom(other.Table);
      }
      columns_.Add(other.columns_);
      items_.Add(other.items_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (table_ == null) {
              table_ = new global::Table.Table();
            }
            input.ReadMessage(table_);
            break;
          }
          case 18: {
            columns_.AddEntriesFrom(input, _repeated_columns_codec);
            break;
          }
          case 26: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Log_packet_structionItem : pb::IMessage<Log_packet_structionItem> {
    private static readonly pb::MessageParser<Log_packet_structionItem> _parser = new pb::MessageParser<Log_packet_structionItem>(() => new Log_packet_structionItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Log_packet_structionItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Table.LogPacketStructionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log_packet_structionItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log_packet_structionItem(Log_packet_structionItem other) : this() {
      name_ = other.name_;
      size_ = other.size_;
      description_ = other.description_;
      keyNameForCode_ = other.keyNameForCode_;
      keyTypeForCode_ = other.keyTypeForCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log_packet_structionItem Clone() {
      return new Log_packet_structionItem(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 2;
    private int size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "key_name_for_code" field.</summary>
    public const int KeyNameForCodeFieldNumber = 4;
    private string keyNameForCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeyNameForCode {
      get { return keyNameForCode_; }
      set {
        keyNameForCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "key_type_for_code" field.</summary>
    public const int KeyTypeForCodeFieldNumber = 5;
    private string keyTypeForCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeyTypeForCode {
      get { return keyTypeForCode_; }
      set {
        keyTypeForCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Log_packet_structionItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Log_packet_structionItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Size != other.Size) return false;
      if (Description != other.Description) return false;
      if (KeyNameForCode != other.KeyNameForCode) return false;
      if (KeyTypeForCode != other.KeyTypeForCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Size != 0) hash ^= Size.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (KeyNameForCode.Length != 0) hash ^= KeyNameForCode.GetHashCode();
      if (KeyTypeForCode.Length != 0) hash ^= KeyTypeForCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Size != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Size);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (KeyNameForCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(KeyNameForCode);
      }
      if (KeyTypeForCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(KeyTypeForCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Size != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Size);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (KeyNameForCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyNameForCode);
      }
      if (KeyTypeForCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyTypeForCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Log_packet_structionItem other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.KeyNameForCode.Length != 0) {
        KeyNameForCode = other.KeyNameForCode;
      }
      if (other.KeyTypeForCode.Length != 0) {
        KeyTypeForCode = other.KeyTypeForCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Size = input.ReadInt32();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            KeyNameForCode = input.ReadString();
            break;
          }
          case 42: {
            KeyTypeForCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
