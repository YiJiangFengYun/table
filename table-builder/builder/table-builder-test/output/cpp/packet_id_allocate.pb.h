// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet_id_allocate.proto

#ifndef PROTOBUF_packet_5fid_5fallocate_2eproto__INCLUDED
#define PROTOBUF_packet_5fid_5fallocate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "table.pb.h"
// @@protoc_insertion_point(includes)
namespace table {
class Column;
class ColumnDefaultTypeInternal;
extern ColumnDefaultTypeInternal _Column_default_instance_;
class Packet_id_allocate;
class Packet_id_allocateDefaultTypeInternal;
extern Packet_id_allocateDefaultTypeInternal _Packet_id_allocate_default_instance_;
class Packet_id_allocateItem;
class Packet_id_allocateItemDefaultTypeInternal;
extern Packet_id_allocateItemDefaultTypeInternal _Packet_id_allocateItem_default_instance_;
class Table;
class TableDefaultTypeInternal;
extern TableDefaultTypeInternal _Table_default_instance_;
class Wrapper;
class WrapperDefaultTypeInternal;
extern WrapperDefaultTypeInternal _Wrapper_default_instance_;
}  // namespace table

namespace table {

namespace protobuf_packet_5fid_5fallocate_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_packet_5fid_5fallocate_2eproto

// ===================================================================

class Packet_id_allocate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:table.Packet_id_allocate) */ {
 public:
  Packet_id_allocate();
  virtual ~Packet_id_allocate();

  Packet_id_allocate(const Packet_id_allocate& from);

  inline Packet_id_allocate& operator=(const Packet_id_allocate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Packet_id_allocate& default_instance();

  static inline const Packet_id_allocate* internal_default_instance() {
    return reinterpret_cast<const Packet_id_allocate*>(
               &_Packet_id_allocate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Packet_id_allocate* other);

  // implements Message ----------------------------------------------

  inline Packet_id_allocate* New() const PROTOBUF_FINAL { return New(NULL); }

  Packet_id_allocate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Packet_id_allocate& from);
  void MergeFrom(const Packet_id_allocate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Packet_id_allocate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .table.Column columns = 2;
  int columns_size() const;
  void clear_columns();
  static const int kColumnsFieldNumber = 2;
  const ::table::Column& columns(int index) const;
  ::table::Column* mutable_columns(int index);
  ::table::Column* add_columns();
  ::google::protobuf::RepeatedPtrField< ::table::Column >*
      mutable_columns();
  const ::google::protobuf::RepeatedPtrField< ::table::Column >&
      columns() const;

  // repeated .table.Packet_id_allocateItem items = 3;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 3;
  const ::table::Packet_id_allocateItem& items(int index) const;
  ::table::Packet_id_allocateItem* mutable_items(int index);
  ::table::Packet_id_allocateItem* add_items();
  ::google::protobuf::RepeatedPtrField< ::table::Packet_id_allocateItem >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::table::Packet_id_allocateItem >&
      items() const;

  // .table.Table table = 1;
  bool has_table() const;
  void clear_table();
  static const int kTableFieldNumber = 1;
  const ::table::Table& table() const;
  ::table::Table* mutable_table();
  ::table::Table* release_table();
  void set_allocated_table(::table::Table* table);

  // @@protoc_insertion_point(class_scope:table.Packet_id_allocate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::table::Column > columns_;
  ::google::protobuf::RepeatedPtrField< ::table::Packet_id_allocateItem > items_;
  ::table::Table* table_;
  mutable int _cached_size_;
  friend struct protobuf_packet_5fid_5fallocate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Packet_id_allocateItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:table.Packet_id_allocateItem) */ {
 public:
  Packet_id_allocateItem();
  virtual ~Packet_id_allocateItem();

  Packet_id_allocateItem(const Packet_id_allocateItem& from);

  inline Packet_id_allocateItem& operator=(const Packet_id_allocateItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Packet_id_allocateItem& default_instance();

  static inline const Packet_id_allocateItem* internal_default_instance() {
    return reinterpret_cast<const Packet_id_allocateItem*>(
               &_Packet_id_allocateItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Packet_id_allocateItem* other);

  // implements Message ----------------------------------------------

  inline Packet_id_allocateItem* New() const PROTOBUF_FINAL { return New(NULL); }

  Packet_id_allocateItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Packet_id_allocateItem& from);
  void MergeFrom(const Packet_id_allocateItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Packet_id_allocateItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string description = 3;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string packet_struction = 4;
  void clear_packet_struction();
  static const int kPacketStructionFieldNumber = 4;
  const ::std::string& packet_struction() const;
  void set_packet_struction(const ::std::string& value);
  #if LANG_CXX11
  void set_packet_struction(::std::string&& value);
  #endif
  void set_packet_struction(const char* value);
  void set_packet_struction(const char* value, size_t size);
  ::std::string* mutable_packet_struction();
  ::std::string* release_packet_struction();
  void set_allocated_packet_struction(::std::string* packet_struction);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:table.Packet_id_allocateItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr packet_struction_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct protobuf_packet_5fid_5fallocate_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Packet_id_allocate

// .table.Table table = 1;
inline bool Packet_id_allocate::has_table() const {
  return this != internal_default_instance() && table_ != NULL;
}
inline void Packet_id_allocate::clear_table() {
  if (GetArenaNoVirtual() == NULL && table_ != NULL) delete table_;
  table_ = NULL;
}
inline const ::table::Table& Packet_id_allocate::table() const {
  // @@protoc_insertion_point(field_get:table.Packet_id_allocate.table)
  return table_ != NULL ? *table_
                         : *::table::Table::internal_default_instance();
}
inline ::table::Table* Packet_id_allocate::mutable_table() {
  
  if (table_ == NULL) {
    table_ = new ::table::Table;
  }
  // @@protoc_insertion_point(field_mutable:table.Packet_id_allocate.table)
  return table_;
}
inline ::table::Table* Packet_id_allocate::release_table() {
  // @@protoc_insertion_point(field_release:table.Packet_id_allocate.table)
  
  ::table::Table* temp = table_;
  table_ = NULL;
  return temp;
}
inline void Packet_id_allocate::set_allocated_table(::table::Table* table) {
  delete table_;
  table_ = table;
  if (table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:table.Packet_id_allocate.table)
}

// repeated .table.Column columns = 2;
inline int Packet_id_allocate::columns_size() const {
  return columns_.size();
}
inline void Packet_id_allocate::clear_columns() {
  columns_.Clear();
}
inline const ::table::Column& Packet_id_allocate::columns(int index) const {
  // @@protoc_insertion_point(field_get:table.Packet_id_allocate.columns)
  return columns_.Get(index);
}
inline ::table::Column* Packet_id_allocate::mutable_columns(int index) {
  // @@protoc_insertion_point(field_mutable:table.Packet_id_allocate.columns)
  return columns_.Mutable(index);
}
inline ::table::Column* Packet_id_allocate::add_columns() {
  // @@protoc_insertion_point(field_add:table.Packet_id_allocate.columns)
  return columns_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::table::Column >*
Packet_id_allocate::mutable_columns() {
  // @@protoc_insertion_point(field_mutable_list:table.Packet_id_allocate.columns)
  return &columns_;
}
inline const ::google::protobuf::RepeatedPtrField< ::table::Column >&
Packet_id_allocate::columns() const {
  // @@protoc_insertion_point(field_list:table.Packet_id_allocate.columns)
  return columns_;
}

// repeated .table.Packet_id_allocateItem items = 3;
inline int Packet_id_allocate::items_size() const {
  return items_.size();
}
inline void Packet_id_allocate::clear_items() {
  items_.Clear();
}
inline const ::table::Packet_id_allocateItem& Packet_id_allocate::items(int index) const {
  // @@protoc_insertion_point(field_get:table.Packet_id_allocate.items)
  return items_.Get(index);
}
inline ::table::Packet_id_allocateItem* Packet_id_allocate::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:table.Packet_id_allocate.items)
  return items_.Mutable(index);
}
inline ::table::Packet_id_allocateItem* Packet_id_allocate::add_items() {
  // @@protoc_insertion_point(field_add:table.Packet_id_allocate.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::table::Packet_id_allocateItem >*
Packet_id_allocate::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:table.Packet_id_allocate.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::table::Packet_id_allocateItem >&
Packet_id_allocate::items() const {
  // @@protoc_insertion_point(field_list:table.Packet_id_allocate.items)
  return items_;
}

// -------------------------------------------------------------------

// Packet_id_allocateItem

// int32 id = 1;
inline void Packet_id_allocateItem::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Packet_id_allocateItem::id() const {
  // @@protoc_insertion_point(field_get:table.Packet_id_allocateItem.id)
  return id_;
}
inline void Packet_id_allocateItem::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:table.Packet_id_allocateItem.id)
}

// string name = 2;
inline void Packet_id_allocateItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Packet_id_allocateItem::name() const {
  // @@protoc_insertion_point(field_get:table.Packet_id_allocateItem.name)
  return name_.GetNoArena();
}
inline void Packet_id_allocateItem::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:table.Packet_id_allocateItem.name)
}
#if LANG_CXX11
inline void Packet_id_allocateItem::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:table.Packet_id_allocateItem.name)
}
#endif
inline void Packet_id_allocateItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:table.Packet_id_allocateItem.name)
}
inline void Packet_id_allocateItem::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:table.Packet_id_allocateItem.name)
}
inline ::std::string* Packet_id_allocateItem::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:table.Packet_id_allocateItem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Packet_id_allocateItem::release_name() {
  // @@protoc_insertion_point(field_release:table.Packet_id_allocateItem.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Packet_id_allocateItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:table.Packet_id_allocateItem.name)
}

// string description = 3;
inline void Packet_id_allocateItem::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Packet_id_allocateItem::description() const {
  // @@protoc_insertion_point(field_get:table.Packet_id_allocateItem.description)
  return description_.GetNoArena();
}
inline void Packet_id_allocateItem::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:table.Packet_id_allocateItem.description)
}
#if LANG_CXX11
inline void Packet_id_allocateItem::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:table.Packet_id_allocateItem.description)
}
#endif
inline void Packet_id_allocateItem::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:table.Packet_id_allocateItem.description)
}
inline void Packet_id_allocateItem::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:table.Packet_id_allocateItem.description)
}
inline ::std::string* Packet_id_allocateItem::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:table.Packet_id_allocateItem.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Packet_id_allocateItem::release_description() {
  // @@protoc_insertion_point(field_release:table.Packet_id_allocateItem.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Packet_id_allocateItem::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:table.Packet_id_allocateItem.description)
}

// string packet_struction = 4;
inline void Packet_id_allocateItem::clear_packet_struction() {
  packet_struction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Packet_id_allocateItem::packet_struction() const {
  // @@protoc_insertion_point(field_get:table.Packet_id_allocateItem.packet_struction)
  return packet_struction_.GetNoArena();
}
inline void Packet_id_allocateItem::set_packet_struction(const ::std::string& value) {
  
  packet_struction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:table.Packet_id_allocateItem.packet_struction)
}
#if LANG_CXX11
inline void Packet_id_allocateItem::set_packet_struction(::std::string&& value) {
  
  packet_struction_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:table.Packet_id_allocateItem.packet_struction)
}
#endif
inline void Packet_id_allocateItem::set_packet_struction(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  packet_struction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:table.Packet_id_allocateItem.packet_struction)
}
inline void Packet_id_allocateItem::set_packet_struction(const char* value, size_t size) {
  
  packet_struction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:table.Packet_id_allocateItem.packet_struction)
}
inline ::std::string* Packet_id_allocateItem::mutable_packet_struction() {
  
  // @@protoc_insertion_point(field_mutable:table.Packet_id_allocateItem.packet_struction)
  return packet_struction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Packet_id_allocateItem::release_packet_struction() {
  // @@protoc_insertion_point(field_release:table.Packet_id_allocateItem.packet_struction)
  
  return packet_struction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Packet_id_allocateItem::set_allocated_packet_struction(::std::string* packet_struction) {
  if (packet_struction != NULL) {
    
  } else {
    
  }
  packet_struction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), packet_struction);
  // @@protoc_insertion_point(field_set_allocated:table.Packet_id_allocateItem.packet_struction)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace table

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_packet_5fid_5fallocate_2eproto__INCLUDED
