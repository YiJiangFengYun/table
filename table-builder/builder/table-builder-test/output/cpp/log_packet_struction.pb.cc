// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: log_packet_struction.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "log_packet_struction.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace table {
class Log_packet_structionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Log_packet_struction> {
} _Log_packet_struction_default_instance_;
class Log_packet_structionItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Log_packet_structionItem> {
} _Log_packet_structionItem_default_instance_;

namespace protobuf_log_5fpacket_5fstruction_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Log_packet_struction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Log_packet_struction, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Log_packet_struction, columns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Log_packet_struction, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Log_packet_structionItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Log_packet_structionItem, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Log_packet_structionItem, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Log_packet_structionItem, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Log_packet_structionItem, key_name_for_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Log_packet_structionItem, key_type_for_code_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Log_packet_struction)},
  { 8, -1, sizeof(Log_packet_structionItem)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Log_packet_struction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Log_packet_structionItem_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "log_packet_struction.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _Log_packet_struction_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Log_packet_structionItem_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::table::protobuf_table_2eproto::InitDefaults();
  _Log_packet_struction_default_instance_.DefaultConstruct();
  _Log_packet_structionItem_default_instance_.DefaultConstruct();
  _Log_packet_struction_default_instance_.get_mutable()->table_ = const_cast< ::table::Table*>(
      ::table::Table::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\032log_packet_struction.proto\022\005table\032\013tab"
      "le.proto\"\203\001\n\024Log_packet_struction\022\033\n\005tab"
      "le\030\001 \001(\0132\014.table.Table\022\036\n\007columns\030\002 \003(\0132"
      "\r.table.Column\022.\n\005items\030\003 \003(\0132\037.table.Lo"
      "g_packet_structionItem\"\201\001\n\030Log_packet_st"
      "ructionItem\022\014\n\004name\030\001 \001(\t\022\014\n\004size\030\002 \001(\005\022"
      "\023\n\013description\030\003 \001(\t\022\031\n\021key_name_for_cod"
      "e\030\004 \001(\t\022\031\n\021key_type_for_code\030\005 \001(\tb\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 322);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "log_packet_struction.proto", &protobuf_RegisterTypes);
  ::table::protobuf_table_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_log_5fpacket_5fstruction_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Log_packet_struction::kTableFieldNumber;
const int Log_packet_struction::kColumnsFieldNumber;
const int Log_packet_struction::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Log_packet_struction::Log_packet_struction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_log_5fpacket_5fstruction_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:table.Log_packet_struction)
}
Log_packet_struction::Log_packet_struction(const Log_packet_struction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      columns_(from.columns_),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_table()) {
    table_ = new ::table::Table(*from.table_);
  } else {
    table_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:table.Log_packet_struction)
}

void Log_packet_struction::SharedCtor() {
  table_ = NULL;
  _cached_size_ = 0;
}

Log_packet_struction::~Log_packet_struction() {
  // @@protoc_insertion_point(destructor:table.Log_packet_struction)
  SharedDtor();
}

void Log_packet_struction::SharedDtor() {
  if (this != internal_default_instance()) {
    delete table_;
  }
}

void Log_packet_struction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Log_packet_struction::descriptor() {
  protobuf_log_5fpacket_5fstruction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_log_5fpacket_5fstruction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Log_packet_struction& Log_packet_struction::default_instance() {
  protobuf_log_5fpacket_5fstruction_2eproto::InitDefaults();
  return *internal_default_instance();
}

Log_packet_struction* Log_packet_struction::New(::google::protobuf::Arena* arena) const {
  Log_packet_struction* n = new Log_packet_struction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Log_packet_struction::Clear() {
// @@protoc_insertion_point(message_clear_start:table.Log_packet_struction)
  columns_.Clear();
  items_.Clear();
  if (GetArenaNoVirtual() == NULL && table_ != NULL) {
    delete table_;
  }
  table_ = NULL;
}

bool Log_packet_struction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:table.Log_packet_struction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .table.Table table = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .table.Column columns = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_columns()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .table.Log_packet_structionItem items = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:table.Log_packet_struction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:table.Log_packet_struction)
  return false;
#undef DO_
}

void Log_packet_struction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:table.Log_packet_struction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .table.Table table = 1;
  if (this->has_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->table_, output);
  }

  // repeated .table.Column columns = 2;
  for (unsigned int i = 0, n = this->columns_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->columns(i), output);
  }

  // repeated .table.Log_packet_structionItem items = 3;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:table.Log_packet_struction)
}

::google::protobuf::uint8* Log_packet_struction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:table.Log_packet_struction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .table.Table table = 1;
  if (this->has_table()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->table_, deterministic, target);
  }

  // repeated .table.Column columns = 2;
  for (unsigned int i = 0, n = this->columns_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->columns(i), deterministic, target);
  }

  // repeated .table.Log_packet_structionItem items = 3;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:table.Log_packet_struction)
  return target;
}

size_t Log_packet_struction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:table.Log_packet_struction)
  size_t total_size = 0;

  // repeated .table.Column columns = 2;
  {
    unsigned int count = this->columns_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->columns(i));
    }
  }

  // repeated .table.Log_packet_structionItem items = 3;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  // .table.Table table = 1;
  if (this->has_table()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->table_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Log_packet_struction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:table.Log_packet_struction)
  GOOGLE_DCHECK_NE(&from, this);
  const Log_packet_struction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Log_packet_struction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:table.Log_packet_struction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:table.Log_packet_struction)
    MergeFrom(*source);
  }
}

void Log_packet_struction::MergeFrom(const Log_packet_struction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:table.Log_packet_struction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  columns_.MergeFrom(from.columns_);
  items_.MergeFrom(from.items_);
  if (from.has_table()) {
    mutable_table()->::table::Table::MergeFrom(from.table());
  }
}

void Log_packet_struction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:table.Log_packet_struction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Log_packet_struction::CopyFrom(const Log_packet_struction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:table.Log_packet_struction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Log_packet_struction::IsInitialized() const {
  return true;
}

void Log_packet_struction::Swap(Log_packet_struction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Log_packet_struction::InternalSwap(Log_packet_struction* other) {
  columns_.InternalSwap(&other->columns_);
  items_.InternalSwap(&other->items_);
  std::swap(table_, other->table_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Log_packet_struction::GetMetadata() const {
  protobuf_log_5fpacket_5fstruction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_log_5fpacket_5fstruction_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Log_packet_struction

// .table.Table table = 1;
bool Log_packet_struction::has_table() const {
  return this != internal_default_instance() && table_ != NULL;
}
void Log_packet_struction::clear_table() {
  if (GetArenaNoVirtual() == NULL && table_ != NULL) delete table_;
  table_ = NULL;
}
const ::table::Table& Log_packet_struction::table() const {
  // @@protoc_insertion_point(field_get:table.Log_packet_struction.table)
  return table_ != NULL ? *table_
                         : *::table::Table::internal_default_instance();
}
::table::Table* Log_packet_struction::mutable_table() {
  
  if (table_ == NULL) {
    table_ = new ::table::Table;
  }
  // @@protoc_insertion_point(field_mutable:table.Log_packet_struction.table)
  return table_;
}
::table::Table* Log_packet_struction::release_table() {
  // @@protoc_insertion_point(field_release:table.Log_packet_struction.table)
  
  ::table::Table* temp = table_;
  table_ = NULL;
  return temp;
}
void Log_packet_struction::set_allocated_table(::table::Table* table) {
  delete table_;
  table_ = table;
  if (table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:table.Log_packet_struction.table)
}

// repeated .table.Column columns = 2;
int Log_packet_struction::columns_size() const {
  return columns_.size();
}
void Log_packet_struction::clear_columns() {
  columns_.Clear();
}
const ::table::Column& Log_packet_struction::columns(int index) const {
  // @@protoc_insertion_point(field_get:table.Log_packet_struction.columns)
  return columns_.Get(index);
}
::table::Column* Log_packet_struction::mutable_columns(int index) {
  // @@protoc_insertion_point(field_mutable:table.Log_packet_struction.columns)
  return columns_.Mutable(index);
}
::table::Column* Log_packet_struction::add_columns() {
  // @@protoc_insertion_point(field_add:table.Log_packet_struction.columns)
  return columns_.Add();
}
::google::protobuf::RepeatedPtrField< ::table::Column >*
Log_packet_struction::mutable_columns() {
  // @@protoc_insertion_point(field_mutable_list:table.Log_packet_struction.columns)
  return &columns_;
}
const ::google::protobuf::RepeatedPtrField< ::table::Column >&
Log_packet_struction::columns() const {
  // @@protoc_insertion_point(field_list:table.Log_packet_struction.columns)
  return columns_;
}

// repeated .table.Log_packet_structionItem items = 3;
int Log_packet_struction::items_size() const {
  return items_.size();
}
void Log_packet_struction::clear_items() {
  items_.Clear();
}
const ::table::Log_packet_structionItem& Log_packet_struction::items(int index) const {
  // @@protoc_insertion_point(field_get:table.Log_packet_struction.items)
  return items_.Get(index);
}
::table::Log_packet_structionItem* Log_packet_struction::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:table.Log_packet_struction.items)
  return items_.Mutable(index);
}
::table::Log_packet_structionItem* Log_packet_struction::add_items() {
  // @@protoc_insertion_point(field_add:table.Log_packet_struction.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::table::Log_packet_structionItem >*
Log_packet_struction::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:table.Log_packet_struction.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::table::Log_packet_structionItem >&
Log_packet_struction::items() const {
  // @@protoc_insertion_point(field_list:table.Log_packet_struction.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Log_packet_structionItem::kNameFieldNumber;
const int Log_packet_structionItem::kSizeFieldNumber;
const int Log_packet_structionItem::kDescriptionFieldNumber;
const int Log_packet_structionItem::kKeyNameForCodeFieldNumber;
const int Log_packet_structionItem::kKeyTypeForCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Log_packet_structionItem::Log_packet_structionItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_log_5fpacket_5fstruction_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:table.Log_packet_structionItem)
}
Log_packet_structionItem::Log_packet_structionItem(const Log_packet_structionItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  key_name_for_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_name_for_code().size() > 0) {
    key_name_for_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_name_for_code_);
  }
  key_type_for_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_type_for_code().size() > 0) {
    key_type_for_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_type_for_code_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:table.Log_packet_structionItem)
}

void Log_packet_structionItem::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_name_for_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_type_for_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
  _cached_size_ = 0;
}

Log_packet_structionItem::~Log_packet_structionItem() {
  // @@protoc_insertion_point(destructor:table.Log_packet_structionItem)
  SharedDtor();
}

void Log_packet_structionItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_name_for_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_type_for_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Log_packet_structionItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Log_packet_structionItem::descriptor() {
  protobuf_log_5fpacket_5fstruction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_log_5fpacket_5fstruction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Log_packet_structionItem& Log_packet_structionItem::default_instance() {
  protobuf_log_5fpacket_5fstruction_2eproto::InitDefaults();
  return *internal_default_instance();
}

Log_packet_structionItem* Log_packet_structionItem::New(::google::protobuf::Arena* arena) const {
  Log_packet_structionItem* n = new Log_packet_structionItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Log_packet_structionItem::Clear() {
// @@protoc_insertion_point(message_clear_start:table.Log_packet_structionItem)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_name_for_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_type_for_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
}

bool Log_packet_structionItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:table.Log_packet_structionItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "table.Log_packet_structionItem.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "table.Log_packet_structionItem.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key_name_for_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_name_for_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key_name_for_code().data(), this->key_name_for_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "table.Log_packet_structionItem.key_name_for_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key_type_for_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_type_for_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key_type_for_code().data(), this->key_type_for_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "table.Log_packet_structionItem.key_type_for_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:table.Log_packet_structionItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:table.Log_packet_structionItem)
  return false;
#undef DO_
}

void Log_packet_structionItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:table.Log_packet_structionItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "table.Log_packet_structionItem.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "table.Log_packet_structionItem.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // string key_name_for_code = 4;
  if (this->key_name_for_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_name_for_code().data(), this->key_name_for_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "table.Log_packet_structionItem.key_name_for_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->key_name_for_code(), output);
  }

  // string key_type_for_code = 5;
  if (this->key_type_for_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_type_for_code().data(), this->key_type_for_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "table.Log_packet_structionItem.key_type_for_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->key_type_for_code(), output);
  }

  // @@protoc_insertion_point(serialize_end:table.Log_packet_structionItem)
}

::google::protobuf::uint8* Log_packet_structionItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:table.Log_packet_structionItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "table.Log_packet_structionItem.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "table.Log_packet_structionItem.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // string key_name_for_code = 4;
  if (this->key_name_for_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_name_for_code().data(), this->key_name_for_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "table.Log_packet_structionItem.key_name_for_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->key_name_for_code(), target);
  }

  // string key_type_for_code = 5;
  if (this->key_type_for_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_type_for_code().data(), this->key_type_for_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "table.Log_packet_structionItem.key_type_for_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->key_type_for_code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:table.Log_packet_structionItem)
  return target;
}

size_t Log_packet_structionItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:table.Log_packet_structionItem)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string key_name_for_code = 4;
  if (this->key_name_for_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_name_for_code());
  }

  // string key_type_for_code = 5;
  if (this->key_type_for_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_type_for_code());
  }

  // int32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Log_packet_structionItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:table.Log_packet_structionItem)
  GOOGLE_DCHECK_NE(&from, this);
  const Log_packet_structionItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Log_packet_structionItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:table.Log_packet_structionItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:table.Log_packet_structionItem)
    MergeFrom(*source);
  }
}

void Log_packet_structionItem::MergeFrom(const Log_packet_structionItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:table.Log_packet_structionItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.key_name_for_code().size() > 0) {

    key_name_for_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_name_for_code_);
  }
  if (from.key_type_for_code().size() > 0) {

    key_type_for_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_type_for_code_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void Log_packet_structionItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:table.Log_packet_structionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Log_packet_structionItem::CopyFrom(const Log_packet_structionItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:table.Log_packet_structionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Log_packet_structionItem::IsInitialized() const {
  return true;
}

void Log_packet_structionItem::Swap(Log_packet_structionItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Log_packet_structionItem::InternalSwap(Log_packet_structionItem* other) {
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  key_name_for_code_.Swap(&other->key_name_for_code_);
  key_type_for_code_.Swap(&other->key_type_for_code_);
  std::swap(size_, other->size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Log_packet_structionItem::GetMetadata() const {
  protobuf_log_5fpacket_5fstruction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_log_5fpacket_5fstruction_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Log_packet_structionItem

// string name = 1;
void Log_packet_structionItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Log_packet_structionItem::name() const {
  // @@protoc_insertion_point(field_get:table.Log_packet_structionItem.name)
  return name_.GetNoArena();
}
void Log_packet_structionItem::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:table.Log_packet_structionItem.name)
}
#if LANG_CXX11
void Log_packet_structionItem::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:table.Log_packet_structionItem.name)
}
#endif
void Log_packet_structionItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:table.Log_packet_structionItem.name)
}
void Log_packet_structionItem::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:table.Log_packet_structionItem.name)
}
::std::string* Log_packet_structionItem::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:table.Log_packet_structionItem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Log_packet_structionItem::release_name() {
  // @@protoc_insertion_point(field_release:table.Log_packet_structionItem.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Log_packet_structionItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:table.Log_packet_structionItem.name)
}

// int32 size = 2;
void Log_packet_structionItem::clear_size() {
  size_ = 0;
}
::google::protobuf::int32 Log_packet_structionItem::size() const {
  // @@protoc_insertion_point(field_get:table.Log_packet_structionItem.size)
  return size_;
}
void Log_packet_structionItem::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:table.Log_packet_structionItem.size)
}

// string description = 3;
void Log_packet_structionItem::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Log_packet_structionItem::description() const {
  // @@protoc_insertion_point(field_get:table.Log_packet_structionItem.description)
  return description_.GetNoArena();
}
void Log_packet_structionItem::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:table.Log_packet_structionItem.description)
}
#if LANG_CXX11
void Log_packet_structionItem::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:table.Log_packet_structionItem.description)
}
#endif
void Log_packet_structionItem::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:table.Log_packet_structionItem.description)
}
void Log_packet_structionItem::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:table.Log_packet_structionItem.description)
}
::std::string* Log_packet_structionItem::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:table.Log_packet_structionItem.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Log_packet_structionItem::release_description() {
  // @@protoc_insertion_point(field_release:table.Log_packet_structionItem.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Log_packet_structionItem::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:table.Log_packet_structionItem.description)
}

// string key_name_for_code = 4;
void Log_packet_structionItem::clear_key_name_for_code() {
  key_name_for_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Log_packet_structionItem::key_name_for_code() const {
  // @@protoc_insertion_point(field_get:table.Log_packet_structionItem.key_name_for_code)
  return key_name_for_code_.GetNoArena();
}
void Log_packet_structionItem::set_key_name_for_code(const ::std::string& value) {
  
  key_name_for_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:table.Log_packet_structionItem.key_name_for_code)
}
#if LANG_CXX11
void Log_packet_structionItem::set_key_name_for_code(::std::string&& value) {
  
  key_name_for_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:table.Log_packet_structionItem.key_name_for_code)
}
#endif
void Log_packet_structionItem::set_key_name_for_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_name_for_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:table.Log_packet_structionItem.key_name_for_code)
}
void Log_packet_structionItem::set_key_name_for_code(const char* value, size_t size) {
  
  key_name_for_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:table.Log_packet_structionItem.key_name_for_code)
}
::std::string* Log_packet_structionItem::mutable_key_name_for_code() {
  
  // @@protoc_insertion_point(field_mutable:table.Log_packet_structionItem.key_name_for_code)
  return key_name_for_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Log_packet_structionItem::release_key_name_for_code() {
  // @@protoc_insertion_point(field_release:table.Log_packet_structionItem.key_name_for_code)
  
  return key_name_for_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Log_packet_structionItem::set_allocated_key_name_for_code(::std::string* key_name_for_code) {
  if (key_name_for_code != NULL) {
    
  } else {
    
  }
  key_name_for_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_name_for_code);
  // @@protoc_insertion_point(field_set_allocated:table.Log_packet_structionItem.key_name_for_code)
}

// string key_type_for_code = 5;
void Log_packet_structionItem::clear_key_type_for_code() {
  key_type_for_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Log_packet_structionItem::key_type_for_code() const {
  // @@protoc_insertion_point(field_get:table.Log_packet_structionItem.key_type_for_code)
  return key_type_for_code_.GetNoArena();
}
void Log_packet_structionItem::set_key_type_for_code(const ::std::string& value) {
  
  key_type_for_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:table.Log_packet_structionItem.key_type_for_code)
}
#if LANG_CXX11
void Log_packet_structionItem::set_key_type_for_code(::std::string&& value) {
  
  key_type_for_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:table.Log_packet_structionItem.key_type_for_code)
}
#endif
void Log_packet_structionItem::set_key_type_for_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_type_for_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:table.Log_packet_structionItem.key_type_for_code)
}
void Log_packet_structionItem::set_key_type_for_code(const char* value, size_t size) {
  
  key_type_for_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:table.Log_packet_structionItem.key_type_for_code)
}
::std::string* Log_packet_structionItem::mutable_key_type_for_code() {
  
  // @@protoc_insertion_point(field_mutable:table.Log_packet_structionItem.key_type_for_code)
  return key_type_for_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Log_packet_structionItem::release_key_type_for_code() {
  // @@protoc_insertion_point(field_release:table.Log_packet_structionItem.key_type_for_code)
  
  return key_type_for_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Log_packet_structionItem::set_allocated_key_type_for_code(::std::string* key_type_for_code) {
  if (key_type_for_code != NULL) {
    
  } else {
    
  }
  key_type_for_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_type_for_code);
  // @@protoc_insertion_point(field_set_allocated:table.Log_packet_structionItem.key_type_for_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace table

// @@protoc_insertion_point(global_scope)
